{
  "checkpoints": [
    "{\n  \"trainable_name\": \"MAPPOTrainer\",\n  \"trial_id\": \"2b456_00000\",\n  \"config\": {\n    \"batch_mode\": \"complete_episodes\",\n    \"train_batch_size\": 3200,\n    \"sgd_minibatch_size\": 3200,\n    \"lr\": 0.0005,\n    \"entropy_coeff\": 0.01,\n    \"num_sgd_iter\": 10,\n    \"clip_param\": 0.3,\n    \"use_gae\": true,\n    \"lambda\": 1.0,\n    \"vf_loss_coeff\": 1.0,\n    \"kl_coeff\": 0.2,\n    \"vf_clip_param\": 20.0,\n    \"model\": {\n      \"custom_model\": \"Centralized_Critic_Model\",\n      \"custom_model_config\": {\n        \"env\": \"mpe\",\n        \"env_args\": {\n          \"continuous_actions\": false,\n          \"max_cycles\": 25,\n          \"map_name\": \"simple_spread\"\n        },\n        \"mask_flag\": false,\n        \"global_state_flag\": false,\n        \"opp_action_in_cc\": true,\n        \"agent_level_batch_update\": false,\n        \"force_coop\": false,\n        \"local_mode\": false,\n        \"share_policy\": \"group\",\n        \"evaluation_interval\": 50,\n        \"framework\": \"torch\",\n        \"num_workers\": 1,\n        \"num_gpus\": 0,\n        \"num_cpus_per_worker\": 1,\n        \"num_gpus_per_worker\": 0,\n        \"checkpoint_freq\": 50,\n        \"checkpoint_end\": true,\n        \"restore_path\": {\n          \"model_path\": \"\",\n          \"params_path\": \"\"\n        },\n        \"stop_iters\": 9999999,\n        \"stop_timesteps\": 2000000,\n        \"stop_reward\": 999999,\n        \"seed\": 321,\n        \"local_dir\": \"\",\n        \"model_arch_args\": {\n          \"hidden_state_size\": 256,\n          \"core_arch\": \"mlp\",\n          \"fc_layer\": 2,\n          \"out_dim_fc_0\": 128,\n          \"out_dim_fc_1\": 64,\n          \"encode_layer\": \"128-256\"\n        },\n        \"algorithm\": \"mappo\",\n        \"space_obs\": {\n          \"_type\": \"CLOUDPICKLE_FALLBACK\",\n          \"value\": \"80059582020000000000008c0f67796d2e7370616365732e64696374948c04446963749493942981947d94288c06737061636573948c0b636f6c6c656374696f6e73948c0b4f726465726564446963749493942952948c036f6273948c0e67796d2e7370616365732e626f78948c03426f789493942981947d94288c056474797065948c056e756d707994681093948c02663494898887945294284b038c013c944e4e4e4affffffff4affffffff4b007494628c065f7368617065944b1285948c036c6f77948c126e756d70792e636f72652e6e756d65726963948c0b5f66726f6d627566666572949394289648000000000000000000c8c20000c8c20000c8c20000c8c20000c8c20000c8c20000c8c20000c8c20000c8c20000c8c20000c8c20000c8c20000c8c20000c8c20000c8c20000c8c20000c8c20000c8c29468128c02663494898887945294284b0368164e4e4e4affffffff4affffffff4b007494624b1285948c014394749452948c046869676894681d289648000000000000000000c8420000c8420000c8420000c8420000c8420000c8420000c8420000c8420000c8420000c8420000c8420000c8420000c8420000c8420000c8420000c8420000c8420000c8429468214b1285946824749452948c0d626f756e6465645f62656c6f7794681d289612000000000000000101010101010101010101010101010101019468128c02623194898887945294284b038c017c944e4e4e4affffffff4affffffff4b007494624b1285946824749452948c0d626f756e6465645f61626f766594681d289612000000000000000101010101010101010101010101010101019468304b1285946824749452948c0a5f6e705f72616e646f6d944e75627368184e68104e683b4e75622e\"\n        },\n        \"space_act\": {\n          \"_type\": \"CLOUDPICKLE_FALLBACK\",\n          \"value\": \"80059582000000000000008c1367796d2e7370616365732e6469736372657465948c0844697363726574659493942981947d94288c016e944b058c065f736861706594298c056474797065948c056e756d707994680793948c02693894898887945294284b038c013c944e4e4e4affffffff4affffffff4b007494628c0a5f6e705f72616e646f6d944e75622e\"\n        },\n        \"num_agents\": 3,\n        \"episode_limit\": 25,\n        \"policy_mapping_info\": {\n          \"simple_adversary\": {\n            \"description\": \"one team attack, one team survive\",\n            \"team_prefix\": [\n              \"adversary_\",\n              \"agent_\"\n            ],\n            \"all_agents_one_policy\": false,\n            \"one_agent_one_policy\": true\n          },\n          \"simple_crypto\": {\n            \"description\": \"two team cooperate, one team attack\",\n            \"team_prefix\": [\n              \"eve_\",\n              \"bob_\",\n              \"alice_\"\n            ],\n            \"all_agents_one_policy\": false,\n            \"one_agent_one_policy\": true\n          },\n          \"simple_push\": {\n            \"description\": \"one team target on landmark, one team attack\",\n            \"team_prefix\": [\n              \"adversary_\",\n              \"agent_\"\n            ],\n            \"all_agents_one_policy\": false,\n            \"one_agent_one_policy\": true\n          },\n          \"simple_tag\": {\n            \"description\": \"one team attack, one team survive\",\n            \"team_prefix\": [\n              \"adversary_\",\n              \"agent_\"\n            ],\n            \"all_agents_one_policy\": false,\n            \"one_agent_one_policy\": true\n          },\n          \"simple_spread\": {\n            \"description\": \"one team cooperate\",\n            \"team_prefix\": [\n              \"agent_\"\n            ],\n            \"all_agents_one_policy\": true,\n            \"one_agent_one_policy\": true\n          },\n          \"simple_reference\": {\n            \"description\": \"one team cooperate\",\n            \"team_prefix\": [\n              \"agent_\"\n            ],\n            \"all_agents_one_policy\": true,\n            \"one_agent_one_policy\": true\n          },\n          \"simple_world_comm\": {\n            \"description\": \"two team cooperate and attack, one team survive\",\n            \"team_prefix\": [\n              \"adversary_\",\n              \"leadadversary_\",\n              \"agent_\"\n            ],\n            \"all_agents_one_policy\": false,\n            \"one_agent_one_policy\": true\n          },\n          \"simple_speaker_listener\": {\n            \"description\": \"two team cooperate\",\n            \"team_prefix\": [\n              \"speaker_\",\n              \"listener_\"\n            ],\n            \"all_agents_one_policy\": true,\n            \"one_agent_one_policy\": true\n          }\n        },\n        \"agent_name_ls\": [\n          \"agent_0\",\n          \"agent_1\",\n          \"agent_2\"\n        ]\n      }\n    },\n    \"seed\": 321,\n    \"env\": \"mpe_simple_spread\",\n    \"num_gpus_per_worker\": 0,\n    \"num_gpus\": 0,\n    \"num_workers\": 1,\n    \"multiagent\": {\n      \"policies\": {\n        \"_type\": \"CLOUDPICKLE_FALLBACK\",\n        \"value\": \"80059515000000000000008f94288c0d7368617265645f706f6c69637994902e\"\n      },\n      \"policy_mapping_fn\": {\n        \"_type\": \"CLOUDPICKLE_FALLBACK\",\n        \"value\": \"8005959b020000000000008c1b7261792e636c6f75647069636b6c652e636c6f75647069636b6c65948c0d5f6275696c74696e5f747970659493948c0a4c616d6264615479706594859452942868028c08436f6465547970659485945294284b024b004b004b034b014b1b430488005300944e8594298c086167656e745f6964948c07657069736f6465948c066b77617267739487948c3d633a5c75736572735c70617261735c646f63756d656e74735c6d61726c6c69625c6d61726c6c69625c6d61726c5c616c676f735c72756e5f63632e7079948c083c6c616d6264613e944b7a4300948c127368617265645f706f6c6963795f6e616d6594859429749452947d94288c0b5f5f7061636b6167655f5f948c126d61726c6c69622e6d61726c2e616c676f73948c085f5f6e616d655f5f948c196d61726c6c69622e6d61726c2e616c676f732e72756e5f6363948c085f5f66696c655f5f94680f754e4e68008c105f6d616b655f656d7074795f63656c6c9493942952948594749452948c207261792e636c6f75647069636b6c652e636c6f75647069636b6c655f66617374948c125f66756e6374696f6e5f736574737461746594939468217d947d9428681968108c0c5f5f7175616c6e616d655f5f948c1872756e5f63632e3c6c6f63616c733e2e3c6c616d6264613e948c0f5f5f616e6e6f746174696f6e735f5f947d948c0e5f5f6b7764656661756c74735f5f944e8c0c5f5f64656661756c74735f5f944e8c0a5f5f6d6f64756c655f5f94681a8c075f5f646f635f5f944e8c0b5f5f636c6f737572655f5f9468008c0a5f6d616b655f63656c6c9493948c0d7368617265645f706f6c696379948594529485948c175f636c6f75647069636b6c655f7375626d6f64756c6573945d948c0b5f5f676c6f62616c735f5f947d947586948652302e\"\n      }\n    },\n    \"framework\": \"torch\",\n    \"evaluation_interval\": 50,\n    \"simple_optimizer\": false\n  },\n  \"local_dir\": \"c:\\\\Users\\\\paras\\\\Documents\\\\ChineseCheckersRL\\\\NewRL\\\\MARLIB\\\\exp_results\\\\mappo_mlp_simple_spread\",\n  \"evaluated_params\": {},\n  \"experiment_tag\": \"0\",\n  \"location\": {\n    \"_type\": \"CLOUDPICKLE_FALLBACK\",\n    \"value\": \"8005953a000000000000008c0e7261792e74756e652e747269616c948c084c6f636174696f6e9493942981947d94288c08686f73746e616d65944e8c03706964944e75622e\"\n  },\n  \"resources\": {\n    \"cpu\": 1,\n    \"gpu\": 0,\n    \"memory\": 0,\n    \"object_store_memory\": 0,\n    \"extra_cpu\": 0,\n    \"extra_gpu\": 0,\n    \"extra_memory\": 0,\n    \"extra_object_store_memory\": 0,\n    \"custom_resources\": {},\n    \"extra_custom_resources\": {}\n  },\n  \"placement_group_factory\": {\n    \"_type\": \"CLOUDPICKLE_FALLBACK\",\n    \"value\": \"800595b8000000000000008c1f7261792e74756e652e7574696c732e706c6163656d656e745f67726f757073948c15506c6163656d656e7447726f7570466163746f72799493942981947d94288c085f62756e646c6573945d94287d94288c0343505594473ff00000000000008c0347505594470000000000000000757d94286808473ff0000000000000680947000000000000000075658c095f7374726174656779948c045041434b948c055f6172677394298c075f6b7761726773947d9475622e\"\n  },\n  \"stopping_criterion\": {\n    \"episode_reward_mean\": 2000,\n    \"timesteps_total\": 10000000,\n    \"training_iteration\": 9999999\n  },\n  \"log_to_file\": [\n    null,\n    null\n  ],\n  \"max_failures\": 0,\n  \"_last_result\": {\n    \"trial_id\": \"2b456_00000\"\n  },\n  \"_default_result_or_future\": null,\n  \"last_update_time\": -Infinity,\n  \"metric_analysis\": {},\n  \"n_steps\": [\n    5,\n    10\n  ],\n  \"metric_n_steps\": {},\n  \"export_formats\": [],\n  \"status\": \"ERROR\",\n  \"start_time\": null,\n  \"logdir\": \"c:\\\\Users\\\\paras\\\\Documents\\\\ChineseCheckersRL\\\\NewRL\\\\MARLIB\\\\exp_results\\\\mappo_mlp_simple_spread\\\\MAPPOTrainer_mpe_simple_spread_2b456_00000_0_2025-04-01_17-42-11\",\n  \"runner\": null,\n  \"last_debug\": 0,\n  \"error_file\": \"c:\\\\Users\\\\paras\\\\Documents\\\\ChineseCheckersRL\\\\NewRL\\\\MARLIB\\\\exp_results\\\\mappo_mlp_simple_spread\\\\MAPPOTrainer_mpe_simple_spread_2b456_00000_0_2025-04-01_17-42-11\\\\error.txt\",\n  \"error_msg\": \"Traceback (most recent call last):\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\ray\\\\tune\\\\ray_trial_executor.py\\\", line 611, in start_trial\\n    return self._start_trial(trial, checkpoint, train=train)\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\ray\\\\tune\\\\ray_trial_executor.py\\\", line 486, in _start_trial\\n    runner = self._setup_remote_runner(trial)\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\ray\\\\tune\\\\ray_trial_executor.py\\\", line 328, in _setup_remote_runner\\n    trainable_cls = trial.get_trainable_cls()\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\ray\\\\tune\\\\trial.py\\\", line 700, in get_trainable_cls\\n    return get_trainable_cls(self.trainable_name)\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\ray\\\\tune\\\\registry.py\\\", line 34, in get_trainable_cls\\n    validate_trainable(trainable_name)\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\ray\\\\tune\\\\registry.py\\\", line 39, in validate_trainable\\n    if not has_trainable(trainable_name):\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\ray\\\\tune\\\\registry.py\\\", line 30, in has_trainable\\n    return _global_registry.contains(TRAINABLE_CLASS, trainable_name)\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\ray\\\\tune\\\\registry.py\\\", line 156, in contains\\n    value = _internal_kv_get(_make_key(self._prefix, category, key))\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\ray\\\\_private\\\\client_mode_hook.py\\\", line 105, in wrapper\\n    return func(*args, **kwargs)\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\ray\\\\experimental\\\\internal_kv.py\\\", line 57, in _internal_kv_get\\n    return ray.worker.global_worker.redis_client.hget(key, \\\"value\\\")\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\commands\\\\core.py\\\", line 4970, in hget\\n    return self.execute_command(\\\"HGET\\\", name, key, keys=[name])\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\client.py\\\", line 559, in execute_command\\n    return self._execute_command(*args, **options)\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\client.py\\\", line 567, in _execute_command\\n    return conn.retry.call_with_retry(\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\retry.py\\\", line 65, in call_with_retry\\n    fail(error)\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\client.py\\\", line 571, in <lambda>\\n    lambda error: self._disconnect_raise(conn, error),\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\client.py\\\", line 555, in _disconnect_raise\\n    raise error\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\retry.py\\\", line 62, in call_with_retry\\n    return do()\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\client.py\\\", line 568, in <lambda>\\n    lambda: self._send_command_parse_response(\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\client.py\\\", line 542, in _send_command_parse_response\\n    return self.parse_response(conn, command_name, **options)\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\client.py\\\", line 584, in parse_response\\n    response = connection.read_response()\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\connection.py\\\", line 592, in read_response\\n    response = self._parser.read_response(disable_decoding=disable_decoding)\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\_parsers\\\\resp2.py\\\", line 15, in read_response\\n    result = self._read_response(disable_decoding=disable_decoding)\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\_parsers\\\\resp2.py\\\", line 25, in _read_response\\n    raw = self._buffer.readline()\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\_parsers\\\\socket.py\\\", line 115, in readline\\n    self._read_from_socket()\\n  File \\\"c:\\\\Users\\\\paras\\\\anaconda3\\\\envs\\\\marllib\\\\lib\\\\site-packages\\\\redis\\\\_parsers\\\\socket.py\\\", line 68, in _read_from_socket\\n    raise ConnectionError(SERVER_CLOSED_CONNECTION_ERROR)\\nredis.exceptions.ConnectionError: Connection closed by server.\\n\",\n  \"trial_name_creator\": null,\n  \"custom_trial_name\": null,\n  \"custom_dirname\": null,\n  \"saving_to\": null,\n  \"remote_checkpoint_dir_prefix\": null,\n  \"sync_to_cloud\": null,\n  \"checkpoint_freq\": 50,\n  \"checkpoint_at_end\": true,\n  \"keep_checkpoints_num\": null,\n  \"checkpoint_score_attr\": \"training_iteration\",\n  \"sync_on_checkpoint\": true,\n  \"checkpoint_manager\": {\n    \"_type\": \"CLOUDPICKLE_FALLBACK\",\n    \"value\": \"80059566010000000000008c1b7261792e74756e652e636865636b706f696e745f6d616e61676572948c11436865636b706f696e744d616e616765729493942981947d94288c146b6565705f636865636b706f696e74735f6e756d94477ff00000000000008c165f636865636b706f696e745f73636f72655f6465736394898c165f636865636b706f696e745f73636f72655f61747472948c12747261696e696e675f697465726174696f6e948c1c6e65776573745f70657273697374656e745f636865636b706f696e749468008c0a436865636b706f696e749493942981947d94288c0773746f72616765948c0a70657273697374656e74948c0576616c7565944e8c06726573756c74947d9475628c195f6e65776573745f6d656d6f72795f636865636b706f696e7494680b2981947d9428680e8c066d656d6f72799468104e68117d9475628c115f626573745f636865636b706f696e7473945d948c0b5f6d656d62657273686970948f9475622e\"\n  },\n  \"restore_path\": null,\n  \"restoring_from\": null,\n  \"num_failures\": 1,\n  \"has_new_resources\": false,\n  \"results\": \"80054e2e\",\n  \"best_result\": \"80054e2e\",\n  \"param_config\": \"80054e2e\",\n  \"extra_arg\": \"80054e2e\",\n  \"_state_json\": null,\n  \"_state_valid\": false\n}"
  ],
  "runner_data": {
    "_max_pending_trials": 35,
    "_metric": null,
    "_total_time": 0,
    "_iteration": 18039,
    "_has_errored": false,
    "_fail_fast": false,
    "_server_port": null,
    "_cached_trial_decisions": {},
    "_queued_trial_decisions": {},
    "_updated_queue": true,
    "_result_wait_time": 1,
    "_should_stop_experiment": false,
    "_local_checkpoint_dir": "c:\\Users\\paras\\Documents\\ChineseCheckersRL\\NewRL\\MARLIB\\exp_results\\mappo_mlp_simple_spread",
    "_remote_checkpoint_dir": null,
    "_stopper": {
      "_type": "CLOUDPICKLE_FALLBACK",
      "value": "80059527000000000000008c107261792e74756e652e73746f70706572948c0b4e6f6f7053746f707065729493942981942e"
    },
    "_resumed": false,
    "_start_time": 1743543731.727371,
    "_last_checkpoint_time": -Infinity,
    "_session_str": "2025-04-01_17-42-11",
    "checkpoint_file": "c:\\Users\\paras\\Documents\\ChineseCheckersRL\\NewRL\\MARLIB\\exp_results\\mappo_mlp_simple_spread\\experiment_state-2025-04-01_17-42-11.json",
    "_checkpoint_period": "auto",
    "launch_web_server": false
  },
  "stats": {
    "start_time": 1743543731.727371,
    "timestamp": 1743543751.8676353
  }
}